/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaPunkController2022,
  MetaPunkController2022Interface,
} from "../MetaPunkController2022";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MetaPunk2022Created",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedState",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "punkId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "PunkClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baseUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metaPunk",
    outputs: [
      {
        internalType: "contract IMetaPunk2018",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requstedAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "punkIndexToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintFee",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnershipUnderlyingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff60a01b19169055600060045534801561002257600080fd5b5061002c33610035565b60018055610085565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611218806100946000396000f3fe6080604052600436106100e85760003560e01c8063715018a61161008a578063b8f2e43611610059578063b8f2e4361461027b578063c4ae31681461029b578063f2fde38b146102b0578063fbfa77cf146102d057600080fd5b8063715018a6146102135780638da5cb5b146102285780639abc832014610246578063a0712d681461026857600080fd5b80635165b240116100c65780635165b2401461016c578063581781681461018e5780635c975abb146101c257806370a08231146101f357600080fd5b806313966db5146100ed57806317d70f7c1461011657806351605e6c1461012c575b600080fd5b3480156100f957600080fd5b5061010360025481565b6040519081526020015b60405180910390f35b34801561012257600080fd5b5061010360045481565b34801561013857600080fd5b50610154730144b7e66993c6bfab85581e8601f96bfe50c9df81565b6040516001600160a01b03909116815260200161010d565b34801561017857600080fd5b5061018c610187366004610e7f565b6102f0565b005b34801561019a57600080fd5b506101546101a9366004610eaf565b50730144b7e66993c6bfab85581e8601f96bfe50c9df90565b3480156101ce57600080fd5b506003546101e390600160a01b900460ff1681565b604051901515815260200161010d565b3480156101ff57600080fd5b5061010361020e366004610e7f565b6103bf565b34801561021f57600080fd5b5061018c610453565b34801561023457600080fd5b506000546001600160a01b0316610154565b34801561025257600080fd5b5061025b6104b9565b60405161010d9190610f24565b61018c610276366004610eaf565b610547565b34801561028757600080fd5b5061018c610296366004610f4d565b6108af565b3480156102a757600080fd5b5061018c61098a565b3480156102bc57600080fd5b5061018c6102cb366004610e7f565b610a65565b3480156102dc57600080fd5b50600354610154906001600160a01b031681565b6000546001600160a01b0316331461034f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60405163f2fde38b60e01b81526001600160a01b0382166004820152730144b7e66993c6bfab85581e8601f96bfe50c9df9063f2fde38b90602401600060405180830381600087803b1580156103a457600080fd5b505af11580156103b8573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81526001600160a01b0382166004820152600090730144b7e66993c6bfab85581e8601f96bfe50c9df906370a082319060240160206040518083038186803b15801561041557600080fd5b505afa158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190611008565b92915050565b6000546001600160a01b031633146104ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610346565b6104b76000610b47565b565b600580546104c690611021565b80601f01602080910402602001604051908101604052809291908181526020018280546104f290611021565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050505081565b6002600154141561059a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610346565b6002600155600354600160a01b900460ff16156105f95760405162461bcd60e51b815260206004820152601760248201527f4572723a20436f6e7472616374206973207061757365640000000000000000006044820152606401610346565b612710811061064a5760405162461bcd60e51b815260206004820152601e60248201527f6572723a2072657175657374656420616d6f756e7420746f6f206869676800006044820152606401610346565b34600254826106599190611072565b10156106a75760405162461bcd60e51b815260206004820152601a60248201527f6572723a206e6f7420656e6f7567682066756e64732073656e740000000000006044820152606401610346565b6003546106bd906001600160a01b031634610baf565b60005b818110156108a7576004805460405163ddd838df60e01b81529182018190526024820152730144b7e66993c6bfab85581e8601f96bfe50c9df9063ddd838df90604401600060405180830381600087803b15801561071d57600080fd5b505af1158015610731573d6000803e3d6000fd5b5050600454730144b7e66993c6bfab85581e8601f96bfe50c9df925063bba25b7b9150600561075f82610cc8565b6040516020016107709291906110ad565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161079c929190611154565b600060405180830381600087803b1580156107b657600080fd5b505af11580156107ca573d6000803e3d6000fd5b505050507f5388e5304907434c979387c4b001c2bfd9bfaa91d7a8448bfc5c8f4d2228e16760045460405161080191815260200190565b60405180910390a1600480546040516323b872dd60e01b815230928101929092523360248301526044820152730144b7e66993c6bfab85581e8601f96bfe50c9df906323b872dd90606401600060405180830381600087803b15801561086657600080fd5b505af115801561087a573d6000803e3d6000fd5b50506004805492509050600061088f8361116d565b9190505550808061089f9061116d565b9150506106c0565b505060018055565b6000546001600160a01b031633146109095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610346565b604051638e0273bb60e01b8152306004820152730144b7e66993c6bfab85581e8601f96bfe50c9df90638e0273bb90602401600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b5050506002839055508051610985906005906020840190610de6565b505050565b6000546001600160a01b031633146109e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610346565b6003805460ff600160a01b80830482161581027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90931692909217928390556040517f6c44c1c6e888a23752ec9c1d8f194bfb0ea295ccdb49b3da95d5be50c9db976993610a5b9390049091161515815260200190565b60405180910390a1565b6000546001600160a01b03163314610abf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610346565b6001600160a01b038116610b3b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610346565b610b4481610b47565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80471015610bff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610346565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c4c576040519150601f19603f3d011682016040523d82523d6000602084013e610c51565b606091505b50509050806109855760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610346565b606081610cec5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d165780610d008161116d565b9150610d0f9050600a8361119e565b9150610cf0565b60008167ffffffffffffffff811115610d3157610d31610f37565b6040519080825280601f01601f191660200182016040528015610d5b576020820181803683370190505b5090505b8415610dde57610d706001836111b2565b9150610d7d600a866111c9565b610d889060306111dd565b60f81b818381518110610d9d57610d9d6111f5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610dd7600a8661119e565b9450610d5f565b949350505050565b828054610df290611021565b90600052602060002090601f016020900481019282610e145760008555610e5a565b82601f10610e2d57805160ff1916838001178555610e5a565b82800160010185558215610e5a579182015b82811115610e5a578251825591602001919060010190610e3f565b50610e66929150610e6a565b5090565b5b80821115610e665760008155600101610e6b565b600060208284031215610e9157600080fd5b81356001600160a01b0381168114610ea857600080fd5b9392505050565b600060208284031215610ec157600080fd5b5035919050565b60005b83811015610ee3578181015183820152602001610ecb565b83811115610ef2576000848401525b50505050565b60008151808452610f10816020860160208601610ec8565b601f01601f19169290920160200192915050565b602081526000610ea86020830184610ef8565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610f6057600080fd5b82359150602083013567ffffffffffffffff80821115610f7f57600080fd5b818501915085601f830112610f9357600080fd5b813581811115610fa557610fa5610f37565b604051601f8201601f19908116603f01168101908382118183101715610fcd57610fcd610f37565b81604052828152886020848701011115610fe657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561101a57600080fd5b5051919050565b600181811c9082168061103557607f821691505b6020821081141561105657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561108c5761108c61105c565b500290565b600081516110a3818560208601610ec8565b9290920192915050565b600080845481600182811c9150808316806110c957607f831692505b60208084108214156110e957634e487b7160e01b86526022600452602486fd5b8180156110fd576001811461110e5761113b565b60ff1986168952848901965061113b565b60008b81526020902060005b868110156111335781548b82015290850190830161111a565b505084890196505b50505050505061114b8185611091565b95945050505050565b828152604060208201526000610dde6040830184610ef8565b60006000198214156111815761118161105c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111ad576111ad611188565b500490565b6000828210156111c4576111c461105c565b500390565b6000826111d8576111d8611188565b500690565b600082198211156111f0576111f061105c565b500190565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000809000a";

type MetaPunkController2022ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaPunkController2022ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaPunkController2022__factory extends ContractFactory {
  constructor(...args: MetaPunkController2022ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MetaPunkController2022";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaPunkController2022> {
    return super.deploy(overrides || {}) as Promise<MetaPunkController2022>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaPunkController2022 {
    return super.attach(address) as MetaPunkController2022;
  }
  connect(signer: Signer): MetaPunkController2022__factory {
    return super.connect(signer) as MetaPunkController2022__factory;
  }
  static readonly contractName: "MetaPunkController2022";
  public readonly contractName: "MetaPunkController2022";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaPunkController2022Interface {
    return new utils.Interface(_abi) as MetaPunkController2022Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaPunkController2022 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaPunkController2022;
  }
}
